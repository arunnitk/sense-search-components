0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@4.0.2
3 info using node@v4.6.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/nickwebster/Documents/Development/sense-search-components',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/nickwebster/.npm/sense-search-components/1.1.7/package.tgz not in flight; packing
9 verbose correctMkdir /Users/nickwebster/.npm correctMkdir not in flight; initializing
10 info lifecycle sense-search-components@1.1.7~prepublish: sense-search-components@1.1.7
11 silly lifecycle sense-search-components@1.1.7~prepublish: no script for prepublish, continuing
12 info lifecycle sense-search-components@1.1.7~prepare: sense-search-components@1.1.7
13 silly lifecycle sense-search-components@1.1.7~prepare: no script for prepare, continuing
14 verbose tar pack [ '/Users/nickwebster/.npm/sense-search-components/1.1.7/package.tgz',
14 verbose tar pack   '/Users/nickwebster/Documents/Development/sense-search-components' ]
15 verbose tarball /Users/nickwebster/.npm/sense-search-components/1.1.7/package.tgz
16 verbose folder /Users/nickwebster/Documents/Development/sense-search-components
17 verbose addLocalTarball adding from inside cache /Users/nickwebster/.npm/sense-search-components/1.1.7/package.tgz
18 verbose correctMkdir /Users/nickwebster/.npm correctMkdir not in flight; initializing
19 silly cache afterAdd sense-search-components@1.1.7
20 verbose afterAdd /Users/nickwebster/.npm/sense-search-components/1.1.7/package/package.json not in flight; writing
21 verbose correctMkdir /Users/nickwebster/.npm correctMkdir not in flight; initializing
22 verbose afterAdd /Users/nickwebster/.npm/sense-search-components/1.1.7/package/package.json written
23 silly publish { name: 'sense-search-components',
23 silly publish   version: '1.1.7',
23 silly publish   description: 'A collection of HTML/JavaScript components that allow you to leverage the power of the Qlik Sense QIX engine to embed search in to a Web application or use a more natural language to generate charts on the fly.',
23 silly publish   main: 'Gruntfile.js',
23 silly publish   directories: { example: 'examples' },
23 silly publish   dependencies: {},
23 silly publish   devDependencies:
23 silly publish    { grunt: '^0.4.5',
23 silly publish      'grunt-contrib-less': '^1.1.0',
23 silly publish      'grunt-contrib-uglify': '^0.11.0',
23 silly publish      'grunt-contrib-watch': '^0.6.1',
23 silly publish      'grunt-includes': '^0.5.2' },
23 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
23 silly publish   repository:
23 silly publish    { type: 'git',
23 silly publish      url: 'git+https://github.com/switchnick/sense-search-components.git' },
23 silly publish   author: { name: 'Websy85' },
23 silly publish   license: 'ISC',
23 silly publish   bugs: { url: 'https://github.com/switchnick/sense-search-components/issues' },
23 silly publish   homepage: 'https://github.com/switchnick/sense-search-components',
23 silly publish   readme: '## Sense Search Components\nA collection of HTML/JavaScript components that allow you to leverage the power of the Qlik Sense QIX engine to embed search in to a Web application or use a more natural language to generate charts on the fly.\n\nThe components can be used with the Qlik Sense Capability API, a QSocks implementation or on own their own.\n\nBelow is a quick start guide, for more details please see the <a href=\'https://github.com/websy85/sense-search-components/wiki\' target=\'_blank\'>Wiki</a>. If you think there\'s anything missing please let me know.\n\n####Getting Started\nTo include the Sense Search Components in your Web application you will need to include references to the JavaScript API and the CSS file for styling. Be sure to add the JavaScript file at the end of the HTML body\n``` html\n<link rel="stylesheet" href="https://rawgit.com/websy85/sense-search-components/master/build/sense-search.min.css"/>\n<script type="text/javascript" src="https://rawgit.com/websy85/sense-search-components/master/build/sense-search.min.js"></script>\n```\nOnce included, a new Global object called \'senseSearch\' will be available\n####Connecting to the Sense Engine\n``` javascript\nvar config = {\n      host: "<hostname>",\n      port: "<portnumber",\n      prefix: "<virtualproxy>",\n      isSecure: true|false,\n      app: "<appname or guid>"\n    };\nsenseSearch.connect(config, function(){\n    \n});\n```\n####Adding the Search Box to your Web page\nThis is as simple as including the custom tag <sense-search-input>. Make sure you give the element an Id.\n``` html\n<body style="width: 80%; margin: 20px auto; font-family: arial;">\n    <sense-search-input id="myInput"></sense-search-input>\n</body>\n```\n####Adding a Results List to your Web page\n1. Add an HTML container to your page (the API contains an example Results List but you can use any method to render the results i.e. AngularJS, Handlebars etc). Make sure you give the element an Id.\n``` html\n<sense-search-results id="myResults"></sense-search-results>\n```\n2. Define the Result List definition and attach it to the Results List. The information provided here will be used to build a Session Hypercube for getting the desired values from your Sense application.\n``` javascript\nsenseSearch.connect(config, function(){\n    var options = {\n        "fields":[\n          {\n            "dimension": "<fieldname>",\n            "suppressNull": true|false\n          },\n          ...\n        ],\n        "sortOptions": {\n          "<fieldname>": {\n            "id": "<fieldname>",\n            "name": "<displayname>",\n            "order": 1(asc)|-1(desc)|0(none),\n            "field": "<fieldname>",\n            "sortType": "qSortByAscii|qSortByNumeric|..."\n          }\n        },\n        "defaultSort": "<fieldname>"\n    }\n    senseSearch.results["myResults"].attach(options);\n});\n```\n####Search Behaviour\nThere are 3 available modes for searching, "associations", "simple" and "visualizations". The default mode is "associations".\n##### Associations\nIn this mode the Search Box will behave like the Search Box in the Qlik Sense client. The engine will return the valid associations that were found using the specified search terms. This allows you to make selections in the desired fields to display the results that you want.\n\nYou can see an \'associations\' search example <a href=\'https://rawgit.com/websy85/sense-search-components/master/examples/coded.html\' target=\'_blank\'>here</a>\n\n##### Simple\nIn this mode the Sense Search Components will automatically select the first valid association returned by the engine and display the results for it. When using this mode it\'s best to create a field specifically for searching and concatinate various fields together.\n\nYou can see a \'simple\' search example <a href=\'https://rawgit.com/websy85/sense-search-components/master/examples/standard.html\' target=\'_blank\'>here</a>\n\n##### Visualizations\nIn this mode you can use a more natural language structure to generate visualizations on the fly. For example, if you type \'sales by rep for 2016\', the QIX engine understands that \'sales\' is a measure, \'rep\' is a dimension and the value \'2016\' can be found in the year field. The search result in this instance will be a hypercube and if used with the Capability APIs will render a chart as well. You can read more about this mode in the Wiki.\n\nYou can see a \'visualizations\' search example <a href=\'https://rawgit.com/websy85/sense-search-components/master/examples/nlp.html\' target=\'_blank\'>here</a>\n',
23 silly publish   readmeFilename: 'README.md',
23 silly publish   gitHead: '9945853b9076e4c01916f2bd1605fabdea229a16',
23 silly publish   _id: 'sense-search-components@1.1.7',
23 silly publish   _shasum: '190afcc8c9a016e12f857ef716deaa562dc530ce',
23 silly publish   _from: '.' }
24 info lifecycle sense-search-components@1.1.7~prepublishOnly: sense-search-components@1.1.7
25 silly lifecycle sense-search-components@1.1.7~prepublishOnly: no script for prepublishOnly, continuing
26 verbose getPublishConfig undefined
27 silly mapToRegistry name sense-search-components
28 silly mapToRegistry using default registry
29 silly mapToRegistry registry https://registry.npmjs.org/
30 silly mapToRegistry data Result {
30 silly mapToRegistry   raw: 'sense-search-components',
30 silly mapToRegistry   scope: null,
30 silly mapToRegistry   escapedName: 'sense-search-components',
30 silly mapToRegistry   name: 'sense-search-components',
30 silly mapToRegistry   rawSpec: '',
30 silly mapToRegistry   spec: 'latest',
30 silly mapToRegistry   type: 'tag' }
31 silly mapToRegistry uri https://registry.npmjs.org/sense-search-components
32 verbose publish registryBase https://registry.npmjs.org/
33 silly publish uploading /Users/nickwebster/.npm/sense-search-components/1.1.7/package.tgz
34 verbose request uri https://registry.npmjs.org/sense-search-components
35 verbose request sending authorization for write operation
36 info attempt registry request try #1 at 6:05:06 PM
37 verbose request using bearer token for auth
38 verbose request id 40b8ef77225259af
39 http request PUT https://registry.npmjs.org/sense-search-components
40 http 403 https://registry.npmjs.org/sense-search-components
41 verbose headers { 'content-type': 'application/json',
41 verbose headers   'cache-control': 'max-age=300',
41 verbose headers   'content-length': '95',
41 verbose headers   'accept-ranges': 'bytes',
41 verbose headers   date: 'Thu, 01 Dec 2016 18:05:09 GMT',
41 verbose headers   via: '1.1 varnish',
41 verbose headers   connection: 'keep-alive',
41 verbose headers   'x-served-by': 'cache-lhr6336-LHR',
41 verbose headers   'x-cache': 'MISS',
41 verbose headers   'x-cache-hits': '0',
41 verbose headers   'x-timer': 'S1480615507.741341,VS0,VE1602',
41 verbose headers   vary: 'Accept-Encoding' }
42 verbose request invalidating /Users/nickwebster/.npm/registry.npmjs.org/sense-search-components on PUT
43 error publish Failed PUT 403
44 verbose stack Error: "You cannot publish over the previously published version 1.1.7." : sense-search-components
44 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
44 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
44 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
44 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:186:22)
44 verbose stack     at emitTwo (events.js:87:13)
44 verbose stack     at Request.emit (events.js:172:7)
44 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1081:10)
44 verbose stack     at emitOne (events.js:77:13)
44 verbose stack     at Request.emit (events.js:169:7)
44 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1001:12)
45 verbose statusCode 403
46 verbose pkgid sense-search-components
47 verbose cwd /Users/nickwebster/Documents/Development/sense-search-components
48 error Darwin 16.0.0
49 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
50 error node v4.6.1
51 error npm  v4.0.2
52 error code E403
53 error "You cannot publish over the previously published version 1.1.7." : sense-search-components
54 error If you need help, you may report this error at:
54 error     <https://github.com/npm/npm/issues>
55 verbose exit [ 1, true ]
